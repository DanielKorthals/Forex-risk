#project plan
nou laat ik even een paar dingen opsomen: we hebben een git repository gemaakt genaamd Forex-risk, we hebben visual studio geinstalleerd zodat het op de git bash terminal kan werken. Ik heb zelf VS studio gedownload en daarin ook een clone van de repo gezet van git. We hebben inderdaad ook het fx_model.py bestand aangemaakt met het ml model met gesimuleerde data. We hebben inderdaad nog niks gedaan met docker of kubernetes. what you suggested earlier: (which is what we are still currently working on) Adjusted Project Plan to Include These Tools 

âœ… Step 1: Data & Model Development Fetch or simulate FX rate data Train an ARIMA/Regression model Log experiments & models in MLflow 
âœ… Step 2: API & Deployment Prep Build a FastAPI service to serve predictions Containerize with Docker Set up MLflow tracking server 
âœ… Step 3: Kubernetes Deployment Deploy API on Azure Kubernetes Service (AKS) Expose the model using Kubernetes Ingress 

This will be a killer portfolio project that shows: 
âœ… Machine Learning (ARIMA/Regression) 
âœ… MLOps (MLflow, model registry) 
âœ… Cloud & DevOps (Docker, Kubernetes, Azure AKS) 

ðŸ“Œ How Weâ€™ll Use Kubernetes & MLflow 
âœ… MLflow (for Experiment Tracking & Model Registry) Track ARIMA/Regression experiments, hyperparameters & metrics Store trained models in MLflow Model Registry Compare different models to find the best one 
âœ… Kubernetes (for Scalable Deployment) Containerize the FastAPI/Flask app with Docker Deploy it as a Kubernetes service on Azure Kubernetes Service (AKS) Enable auto-scaling for handling multiple requests 

C:\Users\DanielKorthalsHouseo\Forex-risk\Forex-risk (dit is de directory op m'n pc)



#project structure:

fx-risk-management/
â”‚â”€â”€ app/                
â”‚   â”œâ”€â”€ main.py          # FastAPI app for serving risk predictions
â”‚   â”œâ”€â”€ database.py      # SQLite database connection
â”‚â”€â”€ models/             
â”‚   â”œâ”€â”€ fx_model.py      # ARIMA/Regression model
â”‚   â”œâ”€â”€ train.py         # Model training & MLflow logging
â”‚â”€â”€ data/               
â”‚   â”œâ”€â”€ fx_rates.csv     # Exchange rate data
â”‚   â”œâ”€â”€ transactions.csv # Transactions dataset
â”‚â”€â”€ mlflow/              # MLflow setup
â”‚   â”œâ”€â”€ tracking.py      # MLflow tracking server
â”‚â”€â”€ kubernetes/          # Kubernetes configs
â”‚   â”œâ”€â”€ deployment.yaml  # K8s Deployment for the API
â”‚   â”œâ”€â”€ service.yaml     # K8s Service exposure
â”‚â”€â”€ dashboards/         
â”‚   â”œâ”€â”€ powerbi.pbix     # Power BI visualization
â”‚â”€â”€ Dockerfile           # Docker container setup
â”‚â”€â”€ requirements.txt     # Python dependencies
â”‚â”€â”€ .gitignore           # Ignore unnecessary files
â”‚â”€â”€ README.md            # Project documentation
